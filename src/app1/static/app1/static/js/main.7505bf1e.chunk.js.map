{"version":3,"sources":["components/NavBar/NavBar.js","components/Login/useForm.js","components/Login/Login.js","components/Home/Home.js","components/Routes.js","App.js","serviceWorker.js","index.js","images/Login.svg"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","display","isLoggedIn","marginRight","spacing","title","button","textDecoration","textTransform","fontSize","NavBar","location","useLocation","history","useHistory","pathname","classes","handleClick","a","token","localStorage","getItem","axios","method","url","headers","Authorization","removeItem","console","log","push","className","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","Button","onClick","useForm","validateInputs","useState","email","password","values","setValues","showPassword","setShowPassword","errors","error","setError","isInvalidCred","setIsInvalidCred","isSubmitting","setIsSubmitting","useEffect","formData","FormData","append","data","then","setItem","auth_token","catch","response","prevState","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","toggleShowPassword","justifyContent","alignItems","height","formContainer","flex","flexDirection","form","width","marginTop","padding","breakpoints","down","maxWidth","paper","margin","borderRadius","boxShadow","overflow","img","marginBottom","heading","fontWeight","invalid","Login","errors1","password1","email1","test","length","Paper","Hidden","xsDown","src","illustration","alt","smUp","noValidate","onSubmit","autoComplete","TextField","required","id","type","label","onChange","helperText","InputProps","endAdornment","InputAdornment","Home","PrivateRoute","children","path","rest","tokenExists","render","to","state","from","Routes","exact","createMuiTheme","palette","primary","main","background","default","typography","fontFamily","join","factor","App","ThemeProvider","CssBaseline","Boolean","window","hostname","match","defaults","baseURL","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7505bf1e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  makeStyles,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    display: isLoggedIn => (isLoggedIn ? 'block' : 'none'),\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    textDecoration: 'none',\n    textTransform: 'capitalize',\n    fontSize: '1rem',\n  },\n}));\n\nconst NavBar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const isLoggedIn = location.pathname !== '/login';\n  const classes = useStyles(isLoggedIn);\n\n  const handleClick = async () => {\n    if (isLoggedIn) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios({\n          method: 'POST',\n          url: '/auth/token/logout',\n          headers: { Authorization: `Token ${token}` },\n        });\n        localStorage.removeItem('token');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    history.push('/login');\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Inventory Management Web App\n          </Typography>\n          <Button\n            color='inherit'\n            className={classes.button}\n            onClick={handleClick}\n          >\n            {isLoggedIn ? 'Logout' : 'Login'}\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst useForm = validateInputs => {\n  const [values, setValues] = useState({ email: '', password: '' });\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState({\n    errors: false,\n    email: ' ',\n    password: ' ',\n  });\n  const [isInvalidCred, setIsInvalidCred] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!error.errors && isSubmitting) {\n      const formData = new FormData();\n      formData.append('email', values.email);\n      formData.append('password', values.password);\n      axios({\n        method: 'POST',\n        url: '/auth/token/login',\n        data: formData,\n      })\n        .then(({ data }) => {\n          // handle success\n          localStorage.setItem('token', data.auth_token);\n          history.push('/');\n        })\n        .catch(response => {\n          // handle error\n          console.log(response);\n          setIsInvalidCred(true);\n        });\n      setIsSubmitting(false);\n      setValues(prevState => ({ ...prevState, email: '', password: '' }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isSubmitting]);\n\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setError(validateInputs(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    error,\n    isInvalidCred,\n    setIsInvalidCred,\n    values,\n    showPassword,\n    setError,\n    toggleShowPassword,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  makeStyles,\n  Button,\n  InputAdornment,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport illustration from '../../images/Login.svg';\nimport useForm from './useForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 'calc(100vh - 6rem)',\n  },\n  formContainer: {\n    flex: '1 1 30rem',\n    height: '26rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(0, 5),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0, 2),\n    },\n    '& .MuiTextField-root': {\n      marginTop: theme.spacing(1),\n      width: '100%',\n      maxWidth: '20rem',\n      [theme.breakpoints.down('xs')]: {\n        maxWidth: '15rem',\n      },\n    },\n  },\n  paper: {\n    maxWidth: '70rem',\n    height: '35rem',\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '10px',\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\n    overflow: 'hidden',\n    [theme.breakpoints.down('xs')]: {\n      width: '30rem',\n      height: '38rem',\n      alignItems: 'flex-start',\n    },\n  },\n  img: {\n    flex: '1 1 35rem',\n    maxWidth: '50%',\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      width: '15rem',\n      marginBottom: theme.spacing(2),\n    },\n  },\n  heading: {\n    fontWeight: '700',\n    marginBottom: theme.spacing(4),\n  },\n  button: {\n    width: '100%',\n    maxWidth: '18rem',\n    height: '3rem',\n    borderRadius: '2rem',\n    fontSize: '1.5rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    textTransform: 'capitalize',\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n    },\n  },\n  invalid: {\n    display: isInvalidCred => (isInvalidCred ? 'block' : 'none'),\n  },\n}));\n\nconst Login = () => {\n  const validateInputs = values => {\n    let errors1 = false;\n    let password1 = ' ';\n    let email1 = ' ';\n\n    if (values.email === '') {\n      errors1 = true;\n      email1 = 'Please fill out this field';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors1 = true;\n      email1 = 'Please enter a valid email';\n    }\n    if (values.password === '') {\n      errors1 = true;\n      password1 = 'Please fill out this field';\n    } else if (values.password.length < 5) {\n      errors1 = true;\n      password1 = 'Password should have more than 5 characters';\n    }\n\n    return {\n      errors: errors1,\n      email: email1,\n      password: password1,\n    };\n  };\n\n  const {\n    handleChange,\n    handleSubmit,\n    error,\n    isInvalidCred,\n    values,\n    showPassword,\n    toggleShowPassword,\n  } = useForm(validateInputs);\n\n  const classes = useStyles(isInvalidCred);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Hidden xsDown>\n          <img\n            src={illustration}\n            alt='Login illustration'\n            className={classes.img}\n          />\n        </Hidden>\n        <div className={classes.formContainer}>\n          <Typography variant='h3' className={classes.heading}>\n            Login\n          </Typography>\n          <Hidden smUp>\n            <img\n              src={illustration}\n              alt='Login illustration'\n              className={classes.img}\n            />\n          </Hidden>\n          <Typography variant='h6' color='error' className={classes.invalid}>\n            Invalid email or password. Please try again\n          </Typography>\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            autoComplete='off'\n            className={classes.form}\n          >\n            <TextField\n              required\n              variant='filled'\n              id='email-input'\n              name='email'\n              type='email'\n              label='Email'\n              value={values.email}\n              onChange={handleChange}\n              error={!(error.email === ' ')}\n              helperText={error.email}\n            />\n            <TextField\n              required\n              variant='filled'\n              id='password-input'\n              name='password'\n              type={showPassword ? 'text' : 'password'}\n              label='Password'\n              value={values.password}\n              onChange={handleChange}\n              error={!(error.password === ' ')}\n              helperText={error.password}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton onClick={toggleShowPassword}>\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <Button\n              type='submit'\n              color='primary'\n              variant='contained'\n              className={classes.button}\n            >\n              Login\n            </Button>\n          </form>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\n\nconst Home = () => {\n  return (\n    <div className='App'>\n      <NavBar />\n      <header className='App-header'>Inventory Management Home</header>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavBar from './NavBar/NavBar';\nimport Login from './Login/Login';\nimport Home from './Home/Home';\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute exact path='/login'>\n          <NavBar />\n          <Login />\n        </PrivateRoute>\n        <PrivateRoute path='/'>\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n};\n\nconst PrivateRoute = ({ children, path, ...rest }) => {\n  const tokenExists = !!localStorage.getItem('token');\n  if (path === '/') {\n    return (\n      <Route\n        path={path}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...rest}\n        render={({ location }) =>\n          tokenExists ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n  if (path === '/login') {\n    return (\n      <Route\n        path={path}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...rest}\n        render={({ location }) =>\n          tokenExists ? (\n            <Redirect\n              to={{\n                pathname: '/',\n                state: { from: location },\n              }}\n            />\n          ) : (\n            children\n          )\n        }\n      />\n    );\n  }\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element).isRequired,\n  ]),\n  path: PropTypes.string,\n};\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport Routes from './components/Routes';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4796bd',\n    },\n    background: {\n      default: '#f3f9fb',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Lato',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n  },\n  spacing: factor => `${0.5 * factor}rem`,\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from 'axios';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\naxios.defaults.baseURL = 'https://chouhanaryan.pythonanywhere.com/';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Login.b498e69b.svg\";"],"sourceRoot":""}